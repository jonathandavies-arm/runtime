// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
using System.Runtime.CompilerServices;
using Xunit;

// Generated by Fuzzlyn v2.4 on 2024-11-14 16:26:37
// Run on Arm64 Linux
// Seed: 3815705679905334064-vectort,vector64,vector128,armsve
// Reduced from 78.3 KiB to 0.4 KiB in 00:00:23
// Hits JIT assert in Release:
// Assertion failed 'isVectorRegister(reg3)' in 'Program:Main(Fuzzlyn.ExecutionServer.IRuntime)' during 'Generate code' (IL size 52; hash 0xade6b36b; FullOpts)
//
//     File: /home/swagai01/dotnet/runtime/src/coreclr/jit/emitarm64sve.cpp Line: 4067
//
using System;
using System.Numerics;
using System.Runtime.Intrinsics;
using System.Runtime.Intrinsics.Arm;

public class Runtime_109218
{
    [Fact]
    public static void TestEntryPoint()
    {
        

        Console.WriteLine("foo(): {0}", foo(2, 4));
        Console.WriteLine("bar(): {0}", bar());
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static ulong bar()
    {
        if (Sve.IsSupported)
        {
            var v0 = Vector.Create<byte>(0);
            var v1 = Vector.Create<byte>(0);
            ulong x = Sve.GetActiveElementCount(v0, v1);
            Consume(x);
            return x;
        }
        return 0;
    }

    [MethodImpl(MethodImplOptions.NoInlining)]
    private static int foo(int x, int y)
    {
        return x * 2 + y;
    }


    [MethodImpl(MethodImplOptions.NoInlining)]
    private static void Consume<T>(T v)
    {
    }
}
